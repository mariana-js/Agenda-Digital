package br.com.AgendaDigital.projeto.zuulcontroller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.AgendaDigital.projeto.zuulDAO.IPessoa;
import br.com.AgendaDigital.projeto.zuulmodel.Pessoa;
@RestController
@CrossOrigin("*")
@RequestMapping("/pessoa")

public class PessoaController {
	@Autowired
	private IPessoa dao;
	
	/*@GetMapping("/pessoa")
	public String text() {
		return "Endpoint de Pessoa ";
	}*/
	
	@GetMapping
	public List<Pessoa> listaPessoas() {
		return (List<Pessoa>) dao.findAll();
		
	}
	
	@PostMapping
	public Pessoa criarSetor (@RequestBody Pessoa pessoa) {
		Pessoa pessoaNovo = dao.save(pessoa);
		return pessoaNovo;
	}

	@PutMapping
	public Pessoa alterarPessoa (@RequestBody Pessoa pessoa) {
		Pessoa pessoaNovo = dao.save(pessoa);
		return pessoaNovo;
	}
	 
	@DeleteMapping("/{id_pessoa}")
	public Optional<Pessoa> excluirPessoa (@PathVariable Integer id_pessoa){
		Optional<Pessoa> pessoa = dao.findById(id_pessoa);
		dao.deleteById(id_pessoa);
		return pessoa;
	}
}
